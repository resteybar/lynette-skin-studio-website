{"ast":null,"code":"var _jsxFileName = \"/Users/Gray/Desktop/ /lynette-skin-studio-website/src/Home/Home.tsx\";\nimport React from 'react';\nimport './Home.css';\nimport NavBar from '../NavBar/NavBar';\nimport { styled } from 'styletron-react';\n\nconst Home = props => {\n  // Automate Rendering Links\n  const renderLinks = () => {\n    var renderedLinks = [];\n    const links = props.links;\n    renderedLinks.push(React.createElement(List, {\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Link, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, links[0].name.toUpperCase()))); // On Home Page, show every link except the \"Contact Us\"\n    // because we made a button to handle that link\n\n    for (let i = 1; i < links.length - 1; i++) {\n      const pageName = links[i].name;\n      const path = links[i].path;\n      const mobileAdjustment = links[i].mobileAdjustment;\n      const browserAdjustment = links[i].browserAdjustment;\n      renderedLinks.push(React.createElement(List, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => props.scrollToPage(path, mobileAdjustment, browserAdjustment),\n        $style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, pageName.toUpperCase())));\n    }\n\n    return renderedLinks;\n  };\n\n  const lastIndex = props.links.length - 1;\n  const contactPageId = props.links[lastIndex].name;\n  const contactPageMobileAdj = props.links[lastIndex].mobileAdjustment;\n  const contactPageBrowserAdj = props.links[lastIndex].browserAdjustment;\n  return React.createElement(\"div\", {\n    id: \"Home\",\n    className: \"debug-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    renderLinks: renderLinks(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"welcome-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"WELCOME MESSAGE\"), React.createElement(ButtonInput, {\n    type: \"button\",\n    onClick: () => props.scrollToPage(contactPageId, contactPageMobileAdj, contactPageBrowserAdj),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"CONTACT US\")));\n};\n\nconst ButtonContainer = styled('div', {\n  textAlign: 'center'\n});\nconst ButtonInput = styled('button', {\n  marginTop: '0px',\n  height: '60px',\n  width: '200px',\n  border: '1px solid',\n  borderColor: '#862e08',\n  backgroundColor: 'Transparent',\n  ':hover': {\n    backgroundColor: '#862e08',\n    opacity: 0.7,\n    color: 'rgba(255,255,255,2)',\n    cursor: 'pointer'\n  },\n  WebkitUserSelect: 'none',\n  MozUserSelect: 'none',\n  msUserSelect: 'none',\n  userSelect: 'none',\n  pointerEvents: 'none',\n  // zIndex: -1,\n  //Contact us text\n  color: '#862e08',\n  fontSize: '16pt',\n  letterSpacing: '2px',\n  fontFamily: 'Shree Devanagari 714-Regular.ttf',\n  fontWeight: 100\n});\nconst LynetteBrown = '#862e08';\nconst List = styled('li', {\n  listStyleType: 'none'\n  /* Takes off Bullet Points from List */\n\n});\nconst Link = styled('span', {\n  color: LynetteBrown,\n  letterSpacing: '0.1em',\n  ':hover': {\n    cursor: 'pointer'\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/Users/Gray/Desktop/ /lynette-skin-studio-website/src/Home/Home.tsx"],"names":["React","NavBar","styled","Home","props","renderLinks","renderedLinks","links","push","name","toUpperCase","i","length","pageName","path","mobileAdjustment","browserAdjustment","scrollToPage","color","lastIndex","contactPageId","contactPageMobileAdj","contactPageBrowserAdj","ButtonContainer","textAlign","ButtonInput","marginTop","height","width","border","borderColor","backgroundColor","opacity","cursor","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","pointerEvents","fontSize","letterSpacing","fontFamily","fontWeight","LynetteBrown","List","listStyleType","Link"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Home.css'\nimport NavBar from '../NavBar/NavBar'\nimport { styled } from 'styletron-react'\n\ntype LinkValue = {\n    name: string;\n    path: string;\n    mobileAdjustment: number;\n    browserAdjustment: number;\n}\n\ninterface HomeProps {\n    links: LinkValue[],\n    scrollToPage(id: string, mobileAdjustment: number, browserAdjustment: number): void\n}\n\nconst Home: React.FC<HomeProps> = props => {\n    // Automate Rendering Links\n    const renderLinks = () => {\n        var renderedLinks = []\n\n        const links: LinkValue[] = props.links\n\n        renderedLinks.push(\n            <List key={ 0 }>\n                <Link>{ links[0].name.toUpperCase() }</Link>\n            </List>\n        )\n\n        // On Home Page, show every link except the \"Contact Us\"\n        // because we made a button to handle that link\n        for (let i = 1; i < links.length - 1; i++) {\n            const pageName: string = links[i].name\n            const path: string = links[i].path\n            const mobileAdjustment: number = links[i].mobileAdjustment\n            const browserAdjustment: number = links[i].browserAdjustment\n\n            renderedLinks.push(\n                <List key={ i }>\n                    <Link onClick={ () => props.scrollToPage(path, mobileAdjustment, browserAdjustment) } \n                        $style={{ color: 'white' }}>\n                    { pageName.toUpperCase() }\n                    </Link>\n                </List>\n            )\n        }\n        \n        return renderedLinks\n    }\n\n    const lastIndex = props.links.length - 1\n    const contactPageId: string = props.links[lastIndex].name\n    const contactPageMobileAdj: number = props.links[lastIndex].mobileAdjustment\n    const contactPageBrowserAdj: number = props.links[lastIndex].browserAdjustment\n\n    return (\n        <div id=\"Home\" className='debug-border'>\n            <NavBar renderLinks={ renderLinks() } />\n\n            <ButtonContainer>\n                <h1 id='welcome-message'>WELCOME MESSAGE</h1>\n                <ButtonInput \n                    type=\"button\" \n                    onClick={ () => props.scrollToPage(contactPageId, contactPageMobileAdj, contactPageBrowserAdj) }>\n                        CONTACT US\n                </ButtonInput>\n            </ButtonContainer>\n\n        </div>\n    )\n}\nconst ButtonContainer = styled('div', {\n    textAlign: 'center',\n})\n\nconst ButtonInput = styled('button', {\n    marginTop: '0px',\n    height: '60px',\n    width: '200px',\n    border: '1px solid',\n    borderColor: '#862e08',\n    backgroundColor: 'Transparent',\n    ':hover':{\n        backgroundColor: '#862e08',\n\n        opacity: 0.7,\n        color: 'rgba(255,255,255,2)',\n        cursor: 'pointer'\n    },\n\n\n    WebkitUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none',\n    pointerEvents: 'none',\n    // zIndex: -1,\n\n    //Contact us text\n    color: '#862e08',\n    fontSize: '16pt',\n    letterSpacing: '2px',\n    fontFamily: 'Shree Devanagari 714-Regular.ttf',\n    fontWeight: 100,\n})\n\nconst LynetteBrown = '#862e08'\n\nconst List = styled('li', {\n  listStyleType: 'none',  /* Takes off Bullet Points from List */\n})\n\nconst Link = styled('span', {\n  color: LynetteBrown,\n  letterSpacing: '0.1em',\n  ':hover': {\n    cursor: 'pointer'\n  },\n})\n\nexport default Home"]},"metadata":{},"sourceType":"module"}