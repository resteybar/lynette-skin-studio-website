{"ast":null,"code":"var _jsxFileName = \"/Users/Gray/Desktop/ /lynette-skin-studio-website/src/NavBarScrolling/NavBarScrolling.tsx\";\nimport React from 'react';\nimport './NavBarScrolling.css'; // Images\n\nimport menuIcon from '../images/menu.png';\nimport facebookIcon from '../images/Facebook_Graphic-01.png';\nimport yelpIcon from '../images/Yelp_Graphic-01.png'; // Tools Used\n\nimport { styled, withStyle } from 'styletron-react';\n\nconst NavBarScrolling = props => {\n  var isMenuDisplayed = false;\n\n  const displayLinks = () => {\n    const menuLinks = document.getElementById('mobile-links');\n    const app = document.querySelector('*');\n\n    if (menuLinks && app) {\n      if (!isMenuDisplayed) {\n        menuLinks.className += ' show-navbar';\n        app.style.overflowY = 'hidden';\n      } else {\n        menuLinks.className = 'mobile-navbar';\n        app.style.overflowY = 'scroll';\n      }\n    }\n\n    isMenuDisplayed = !isMenuDisplayed;\n  };\n\n  const navigateToPage = (id, mobileAdjustment) => {\n    // Hides Mobile Nav. Links when link is clicked\n    if (isMenuDisplayed) displayLinks();\n    props.scrollToPage(id, mobileAdjustment);\n  };\n\n  const renderLinks = () => {\n    var renderedLinks = [];\n    const links = props.links;\n\n    for (let i = 0; i < links.length; i++) {\n      const pageName = links[i].name;\n      const path = links[i].path;\n      const linkRef = '#' + path;\n      const mobileAdjustment = links[i].mobileAdjustment;\n      const browserAdjustment = links[i].browserAdjustment;\n      renderedLinks.push(React.createElement(List, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => props.scrollToPage(path, mobileAdjustment, browserAdjustment),\n        className: \"is-mobile-view\",\n        href: linkRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, pageName.toUpperCase())));\n    }\n\n    return renderedLinks;\n  };\n\n  const showNavBar = () => {\n    const top = 118;\n    const navBar = document.getElementById('NavBarScrolling');\n\n    if (navBar) {\n      if (document.body.scrollTop > top || document.documentElement.scrollTop > top) {\n        navBar.style.top = '0px';\n      } else {\n        navBar.style.top = '-150px';\n      }\n    }\n  };\n\n  window.onscroll = function () {\n    showNavBar();\n  };\n\n  const renderedLinks = renderLinks();\n  const facebookLink = 'https://www.facebook.com/LynetteSkinStudio/';\n  const yelpLink = 'https://www.yelp.com/biz/lynettes-skin-studio-marina';\n  return React.createElement(\"div\", {\n    id: \"NavBarScrolling\",\n    className: \"debug-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"navbarscrolling-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title-lynette lynette-brown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"LYNETTE'S\"), React.createElement(\"h1\", {\n    className: \"title-skin-studio lynette-brown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"SKIN STUDIO\")), React.createElement(\"ul\", {\n    id: \"navbarscrolling-links\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, renderedLinks), React.createElement(Menu, {\n    onClick: () => displayLinks(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    src: menuIcon,\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"mobile-links\",\n    className: \"mobile-navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(MobileLinks, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, renderedLinks, React.createElement(SocialIconList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(SocialIcons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: facebookLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(FacebookIcon, {\n    src: facebookIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"a\", {\n    href: yelpLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(YelpIcon, {\n    src: yelpIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })))))));\n}; // CSS\n\n\nconst MobileLinks = styled('ul', {\n  // Creates white space on the left and right of the mobile nav. bar\n  paddingLeft: '4%',\n  paddingRight: '4%',\n  backgroundColor: 'white',\n  // Ensures the entire page is white\n  height: '100vh'\n});\nconst Menu = styled('div', {\n  /* Hide menu icon when expanded on computer */\n  display: 'none',\n  ':hover': {\n    cursor: 'pointer'\n  },\n  '@media screen and (max-width: 800px)': {\n    /* Show icon */\n    display: 'block',\n\n    /* Ensure icon does not occupy room from Title  */\n    position: 'absolute',\n\n    /* Position Menu Icon to the right of the screen */\n    left: '86%',\n    paddingRight: '2%',\n    paddingTop: '33px',\n    paddingBottom: '33px',\n    paddingLeft: '2%'\n  }\n});\nconst MenuIcon = styled('img', {\n  height: '21px',\n  width: '21px',\n  // Turn off Highlighting on menu icon\n  // Allows the user to not select the \"Menu\" icon and open it in a new tab\n  WebkitUserSelect: 'none',\n  MozUserSelect: 'none',\n  msUserSelect: 'none',\n  userSelect: 'none',\n  pointerEvents: 'none'\n});\nconst SocialIcons = styled('div', {\n  paddingTop: '15px'\n});\nconst iconSize = '45px';\nconst YelpIcon = styled('img', {\n  height: iconSize,\n  width: iconSize\n});\nconst FacebookIcon = withStyle(YelpIcon, {\n  marginRight: '10px'\n});\nconst LynetteBrown = '#862e08';\nconst paddingTopBot = '15px';\nconst SocialIconList = styled('li', {\n  listStyleType: 'none'\n  /* Takes off Bullet Points from List */\n\n});\nconst List = styled('li', {\n  listStyleType: 'none',\n\n  /* Takes off Bullet Points from List */\n  padding: '0px',\n  marginTop: '0px',\n  marginLeft: '0px',\n  marginRight: '0px',\n  marginBottom: '0px',\n  // To display Light Border below links FOR Mobile Links\n  '@media screen and (max-width: 800px)': {\n    borderBottom: '1px solid lightgrey',\n    ':hover': {\n      backgroundColor: 'lightgrey'\n    }\n  }\n});\nconst Link = styled('a', {\n  textDecoration: 'none',\n\n  /* Takes off Underline in Links */\n  color: LynetteBrown,\n  paddingTop: paddingTopBot,\n  paddingBottom: paddingTopBot,\n  width: '100%',\n  height: '100%'\n});\nexport default NavBarScrolling;","map":{"version":3,"sources":["/Users/Gray/Desktop/ /lynette-skin-studio-website/src/NavBarScrolling/NavBarScrolling.tsx"],"names":["React","menuIcon","facebookIcon","yelpIcon","styled","withStyle","NavBarScrolling","props","isMenuDisplayed","displayLinks","menuLinks","document","getElementById","app","querySelector","className","style","overflowY","navigateToPage","id","mobileAdjustment","scrollToPage","renderLinks","renderedLinks","links","i","length","pageName","name","path","linkRef","browserAdjustment","push","toUpperCase","showNavBar","top","navBar","body","scrollTop","documentElement","window","onscroll","facebookLink","yelpLink","MobileLinks","paddingLeft","paddingRight","backgroundColor","height","Menu","display","cursor","position","left","paddingTop","paddingBottom","MenuIcon","width","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","pointerEvents","SocialIcons","iconSize","YelpIcon","FacebookIcon","marginRight","LynetteBrown","paddingTopBot","SocialIconList","listStyleType","List","padding","marginTop","marginLeft","marginBottom","borderBottom","Link","textDecoration","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './NavBarScrolling.css'\n\n// Images\nimport menuIcon from '../images/menu.png'\nimport facebookIcon from '../images/Facebook_Graphic-01.png'\nimport yelpIcon from '../images/Yelp_Graphic-01.png'\n\n// Tools Used\nimport { styled, withStyle } from 'styletron-react'\n\ntype LinkValue = {\n    name: string;\n    path: string;\n    mobileAdjustment: number;\n    browserAdjustment: number;\n}\n\ninterface NavBarScrollingProps {\n    links: LinkValue[],\n    scrollToPage(id: string, mobileAdjustment: number): void\n}\n\nconst NavBarScrolling: React.FC<NavBarScrollingProps> = props => {\n    var isMenuDisplayed: boolean = false\n\n    const displayLinks = (): void => {\n        const menuLinks: HTMLElement | null = document.getElementById('mobile-links')\n        const app: HTMLElement | null = document.querySelector('*')\n\n        if (menuLinks && app) {\n            if (!isMenuDisplayed) {\n                menuLinks.className += ' show-navbar'\n                app.style.overflowY = 'hidden'\n            } else {\n                menuLinks.className = 'mobile-navbar'\n                app.style.overflowY = 'scroll'\n            }\n        }\n\n        isMenuDisplayed = !isMenuDisplayed\n    }\n\n    const navigateToPage = (id: string, mobileAdjustment: number): void => {\n        // Hides Mobile Nav. Links when link is clicked\n        if (isMenuDisplayed)\n            displayLinks()\n        props.scrollToPage(id, mobileAdjustment)\n    }\n\n    const renderLinks = (): JSX.Element[] => {\n        var renderedLinks = []\n        const links: LinkValue[] = props.links\n\n        for (let i = 0; i < links.length; i++) {\n            const pageName: string = links[i].name\n            const path: string = links[i].path\n            const linkRef: string = '#' + path\n            const mobileAdjustment: number = links[i].mobileAdjustment\n            const browserAdjustment: number = links[i].browserAdjustment\n\n            renderedLinks.push(\n                <List key={ i }>\n                    <Link onClick={ () => props.scrollToPage(path, mobileAdjustment, browserAdjustment) } \n                            className='is-mobile-view' \n                            href={ linkRef }>\n                        { pageName.toUpperCase() }\n                    </Link>\n                </List>\n            )\n        }\n        \n        return renderedLinks\n    }\n\n    const showNavBar = (): void => {\n        const top = 118\n        const navBar = document.getElementById('NavBarScrolling')\n        \n        if (navBar) {\n            if (document.body.scrollTop > top || document.documentElement.scrollTop > top) {\n                navBar.style.top = '0px'\n            } else {\n                navBar.style.top = '-150px'\n            }\n        }\n    }\n\n    window.onscroll = function() { showNavBar() }\n\n    const renderedLinks = renderLinks()\n    const facebookLink = 'https://www.facebook.com/LynetteSkinStudio/'\n    const yelpLink = 'https://www.yelp.com/biz/lynettes-skin-studio-marina'\n\n    return (\n        <div id='NavBarScrolling' className='debug-border'>\n            <div id='navbarscrolling-title'>\n                <h1 className='title-lynette lynette-brown'>LYNETTE'S</h1>\n                <h1 className='title-skin-studio lynette-brown'>SKIN STUDIO</h1>\n            </div>\n            \n            <ul id='navbarscrolling-links'>\n                { renderedLinks }\n            </ul>\n\n            {/* Mobile Nav. Bar */}\n            {/*     - Menu Icon */}\n            <Menu onClick={ () => displayLinks() }>\n                <MenuIcon src={ menuIcon } draggable='false' />\n            </Menu>\n            \n            {/*     - Mobile Links */}\n            <div id='mobile-links' className='mobile-navbar'>\n                <MobileLinks>\n                    { renderedLinks }\n                    <SocialIconList>\n                        <SocialIcons>\n                            <a href={ facebookLink } target='_blank' rel='noopener noreferrer'>\n                                <FacebookIcon src={ facebookIcon } />\n                            </a>\n                            <a href={ yelpLink } target='_blank' rel='noopener noreferrer'>\n                                <YelpIcon src={ yelpIcon } />\n                            </a>\n                        </SocialIcons>\n                    </SocialIconList>\n                </MobileLinks>\n            </div>\n        </div>\n    )\n}\n\n// CSS\nconst MobileLinks = styled('ul', {\n    // Creates white space on the left and right of the mobile nav. bar\n    paddingLeft: '4%',\n    paddingRight: '4%',\n    backgroundColor: 'white',\n\n    // Ensures the entire page is white\n    height: '100vh'\n})\n\nconst Menu = styled('div', {\n    /* Hide menu icon when expanded on computer */\n    display: 'none',\n    ':hover': {\n        cursor: 'pointer'\n    },\n    '@media screen and (max-width: 800px)': {\n        /* Show icon */\n        display: 'block',\n\n        /* Ensure icon does not occupy room from Title  */\n        position: 'absolute',\n\n        /* Position Menu Icon to the right of the screen */\n        left: '86%',\n\n        paddingRight: '2%',\n        paddingTop: '33px',\n        paddingBottom: '33px',\n        paddingLeft: '2%',\n    }\n})\n\nconst MenuIcon = styled('img', {\n    height: '21px',\n    width: '21px',\n    \n    // Turn off Highlighting on menu icon\n    // Allows the user to not select the \"Menu\" icon and open it in a new tab\n    WebkitUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none',\n    pointerEvents: 'none'\n})\n\nconst SocialIcons = styled('div', {\n    paddingTop: '15px',\n})\n\nconst iconSize = '45px'\nconst YelpIcon = styled('img', {\n    height: iconSize,\n    width: iconSize\n})\n\nconst FacebookIcon = withStyle(YelpIcon, {\n    marginRight: '10px',\n})\n\nconst LynetteBrown = '#862e08'\nconst paddingTopBot = '15px'\n\nconst SocialIconList = styled('li', {\n    listStyleType: 'none',  /* Takes off Bullet Points from List */\n})\n\nconst List = styled('li', {\n  listStyleType: 'none',  /* Takes off Bullet Points from List */\n  padding: '0px',\n  marginTop: '0px',\n  marginLeft: '0px',\n  marginRight: '0px',\n  marginBottom: '0px',\n\n  // To display Light Border below links FOR Mobile Links\n  '@media screen and (max-width: 800px)': {\n      borderBottom: '1px solid lightgrey',\n\n      ':hover': {\n        backgroundColor: 'lightgrey'\n      },\n  }\n})\n\nconst Link = styled('a', {\n  textDecoration: 'none', /* Takes off Underline in Links */\n  color: LynetteBrown,\n  paddingTop: paddingTopBot,\n  paddingBottom: paddingTopBot,\n  width: '100%',\n  height: '100%',\n})\n\nexport default NavBarScrolling"]},"metadata":{},"sourceType":"module"}