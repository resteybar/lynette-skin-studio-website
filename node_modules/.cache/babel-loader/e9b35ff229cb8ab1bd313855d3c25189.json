{"ast":null,"code":"var _jsxFileName = \"/Users/Gray/Desktop/ /lynette-skin-studio-website/src/Goals/Goals.tsx\";\nimport React from 'react';\nimport './Goals.css';\nimport { styled } from 'styletron-react';\nconst LynettesGoals = [{\n  goalName: 'AFFORDABLE',\n  goalDescription: 'We strive to offer the best prices in the Monterey Bay Area to our customers.',\n  goalButtonText: 'SEE SERVICES'\n}, {\n  goalName: 'FACIAL',\n  goalDescription: 'We offer a unique experience to clients, by providing them beauty and relaxation of Lynette’s facial treatments.',\n  goalButtonText: 'SCHEDULE NOW'\n}, {\n  goalName: 'CARE',\n  goalDescription: 'We take pride in caring and building trust with our customers in order to provide a rejuvenating experience.',\n  goalButtonText: 'SEE PRODUCTS'\n}];\n\nconst Goals = () => {\n  const renderGoals = () => {\n    var renderedMenu = [];\n\n    for (let i = 0; i < LynettesGoals.length; i++) {\n      const goalName = LynettesGoals[i].goalName;\n      const goalDescription = LynettesGoals[i].goalDescription;\n      const goalButtonText = LynettesGoals[i].goalButtonText;\n      renderedMenu.push(React.createElement(Goal, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(GoalName, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, goalName), React.createElement(GoalDescription, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, goalDescription), React.createElement(GoalButtonText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, goalButtonText)));\n    }\n\n    return renderedMenu;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(GridLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, renderGoals()));\n};\n\nconst Goal = styled('div', {});\nconst GoalName = styled('h2', {});\nconst GoalDescription = styled('h2', {});\nconst GoalButtonText = styled('h2', {});\nconst GridLayout = styled('div', {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr 1fr',\n  gridColumnGap: '50px' // gridRowGap: '80px',\n  // Center Menu\n  // justifyItems: 'center',\n  // // Ensuring size does not maximize and minimize too much\n  // // minWidth: '400px',\n  // maxWidth: '1000px',\n  // // Helps organize Services when website is getting minimized or on Mobile\n  // '@media screen and (max-width: 1100px)': {\n  //     gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n  //     maxWidth: '700px'\n  // },\n  // '@media screen and (max-width: 800px)': {\n  //     gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n  //     maxWidth: '600px'\n  // },\n  // '@media screen and (max-width: 700px)': {\n  //     gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n  //     marginLeft: '50px',\n  //     marginRight: '50px',\n  // },\n  // '@media screen and (max-width: 600px)': {\n  //     gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n  //     marginLeft: 'auto',\n  //     marginRight: 'auto',\n  //     maxWidth: '225px'\n  // },\n\n});\nexport default Goals;","map":{"version":3,"sources":["/Users/Gray/Desktop/ /lynette-skin-studio-website/src/Goals/Goals.tsx"],"names":["React","styled","LynettesGoals","goalName","goalDescription","goalButtonText","Goals","renderGoals","renderedMenu","i","length","push","Goal","GoalName","GoalDescription","GoalButtonText","GridLayout","display","gridTemplateColumns","gridColumnGap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,iBAAvB;AAQA,MAAMC,aAA2B,GAAG,CAChC;AACIC,EAAAA,QAAQ,EAAE,YADd;AAEIC,EAAAA,eAAe,EAAE,+EAFrB;AAGIC,EAAAA,cAAc,EAAE;AAHpB,CADgC,EAMhC;AACIF,EAAAA,QAAQ,EAAE,QADd;AAEIC,EAAAA,eAAe,EAAE,kHAFrB;AAGIC,EAAAA,cAAc,EAAE;AAHpB,CANgC,EAWhC;AACIF,EAAAA,QAAQ,EAAE,MADd;AAEIC,EAAAA,eAAe,EAAE,8GAFrB;AAGIC,EAAAA,cAAc,EAAE;AAHpB,CAXgC,CAApC;;AAkBA,MAAMC,KAAe,GAAG,MAAM;AAE1B,QAAMC,WAAW,GAAG,MAAqB;AACrC,QAAIC,YAA2B,GAAG,EAAlC;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,aAAa,CAACQ,MAAlC,EAA0CD,CAAC,EAA3C,EAA8C;AAC1C,YAAMN,QAAgB,GAAGD,aAAa,CAACO,CAAD,CAAb,CAAiBN,QAA1C;AACA,YAAMC,eAAuB,GAAGF,aAAa,CAACO,CAAD,CAAb,CAAiBL,eAAjD;AACA,YAAMC,cAAsB,GAAGH,aAAa,CAACO,CAAD,CAAb,CAAiBJ,cAAhD;AAEAG,MAAAA,YAAY,CAACG,IAAb,CACI,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAGF,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYN,QAAZ,CADJ,EAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBC,eAAnB,CAFJ,EAGI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBC,cAAlB,CAHJ,CADJ;AAOH;;AAED,WAAOG,YAAP;AACH,GAlBD;;AAoBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMD,WAAW,EADjB,CAFJ,CADJ;AAQH,CA9BD;;AAgCA,MAAMK,IAAI,GAAGX,MAAM,CAAC,KAAD,EAAQ,EAAR,CAAnB;AAIA,MAAMY,QAAQ,GAAGZ,MAAM,CAAC,IAAD,EAAO,EAAP,CAAvB;AAIA,MAAMa,eAAe,GAAGb,MAAM,CAAC,IAAD,EAAO,EAAP,CAA9B;AAIA,MAAMc,cAAc,GAAGd,MAAM,CAAC,IAAD,EAAO,EAAP,CAA7B;AAIA,MAAMe,UAAU,GAAGf,MAAM,CAAC,KAAD,EAAQ;AAC7BgB,EAAAA,OAAO,EAAE,MADoB;AAE7BC,EAAAA,mBAAmB,EAAE,aAFQ;AAG7BC,EAAAA,aAAa,EAAE,MAHc,CAI7B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAlC6B,CAAR,CAAzB;AAqCA,eAAeb,KAAf","sourcesContent":["import React from 'react'\nimport './Goals.css'\nimport { styled } from 'styletron-react'\n\ntype GoalValues = {\n    goalName: string;\n    goalDescription: string;\n    goalButtonText: string;\n}\n\nconst LynettesGoals: GoalValues[] = [\n    {\n        goalName: 'AFFORDABLE',\n        goalDescription: 'We strive to offer the best prices in the Monterey Bay Area to our customers.',\n        goalButtonText: 'SEE SERVICES'\n    },\n    {\n        goalName: 'FACIAL',\n        goalDescription: 'We offer a unique experience to clients, by providing them beauty and relaxation of Lynette’s facial treatments.',\n        goalButtonText: 'SCHEDULE NOW'\n    },\n    {\n        goalName: 'CARE',\n        goalDescription: 'We take pride in caring and building trust with our customers in order to provide a rejuvenating experience.',\n        goalButtonText: 'SEE PRODUCTS'\n    }\n]\n\nconst Goals: React.FC = () => {\n\n    const renderGoals = (): JSX.Element[] => {\n        var renderedMenu: JSX.Element[] = []\n\n        for (let i = 0; i < LynettesGoals.length; i++){\n            const goalName: string = LynettesGoals[i].goalName\n            const goalDescription: string = LynettesGoals[i].goalDescription\n            const goalButtonText: string = LynettesGoals[i].goalButtonText\n\n            renderedMenu.push(\n                <Goal key={ i }>\n                    <GoalName>{ goalName }</GoalName>\n                    <GoalDescription>{ goalDescription }</GoalDescription>\n                    <GoalButtonText>{ goalButtonText }</GoalButtonText>\n                </Goal>\n            )\n        }\n\n        return renderedMenu\n    }\n\n    return (\n        <div>\n            {/* Goals */}\n            <GridLayout>\n                { renderGoals() }\n            </GridLayout>\n        </div>\n    )\n}\n\nconst Goal = styled('div', {\n\n})\n\nconst GoalName = styled('h2', {\n    \n})\n\nconst GoalDescription = styled('h2', {\n    \n})\n\nconst GoalButtonText = styled('h2', {\n    \n})\n\nconst GridLayout = styled('div', {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr 1fr',\n    gridColumnGap: '50px',\n    // gridRowGap: '80px',\n    // Center Menu\n    // justifyItems: 'center',\n\n    // // Ensuring size does not maximize and minimize too much\n    // // minWidth: '400px',\n    // maxWidth: '1000px',\n\n    // // Helps organize Services when website is getting minimized or on Mobile\n    // '@media screen and (max-width: 1100px)': {\n    //     gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    //     maxWidth: '700px'\n    // },\n\n    // '@media screen and (max-width: 800px)': {\n    //     gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    //     maxWidth: '600px'\n    // },\n\n    // '@media screen and (max-width: 700px)': {\n    //     gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    //     marginLeft: '50px',\n    //     marginRight: '50px',\n    // },\n\n    // '@media screen and (max-width: 600px)': {\n    //     gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    //     marginLeft: 'auto',\n    //     marginRight: 'auto',\n    //     maxWidth: '225px'\n    // },\n})\n\nexport default Goals"]},"metadata":{},"sourceType":"module"}