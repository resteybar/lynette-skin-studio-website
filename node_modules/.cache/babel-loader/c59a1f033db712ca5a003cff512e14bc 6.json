{"ast":null,"code":"var _jsxFileName = \"/Users/Gray/Desktop/ /lynette-skin-studio-website/src/App.tsx\";\nimport React from 'react';\nimport './App.css'; // Components\n\nimport Home from './Home/Home';\nimport Product from './Products/Products';\nimport About from './About/About';\nimport NavBarScrolling from './NavBarScrolling/NavBarScrolling'; // Tools Used\n\nimport { styled } from 'styletron-react';\nimport { isMobile } from 'react-device-detect';\n\nconst App = () => {\n  // Links in Nav Bar\n  const links = [{\n    name: 'Home',\n    pixelsAdjustment: 0\n  }, {\n    name: 'About',\n    pixelsAdjustment: 140\n  }, {\n    name: 'Services',\n    pixelsAdjustment: 0\n  }, {\n    name: 'Products',\n    pixelsAdjustment: 0\n  }, {\n    name: 'Contact',\n    pixelsAdjustment: 0\n  }];\n\n  const scrollToPage = (id, pixelsAdjustment) => {\n    const aboutDiv = document.getElementById(id);\n\n    if (aboutDiv) {\n      var top = aboutDiv.getBoundingClientRect().top + window.pageYOffset; // When on Mobile, scroll down to have the content just below the \n      // mobile nav. bar\n\n      if (isMobile) top += pixelsAdjustment;\n      window.scrollTo({\n        top\n      });\n    }\n  }; // Automate Rendering Links\n\n\n  const renderLinks = () => {\n    var renderedLinks = [];\n    renderedLinks.push(React.createElement(List, {\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, links[0].name.toUpperCase()))); // On Home Page, show every link except the \"Contact Us\"\n    // because we made a button to handle that link\n\n    for (let i = 1; i < links.length - 1; i++) {\n      const pageName = links[i].name;\n      const linkRef = '#' + pageName;\n      const pixelsAdjustment = links[i].pixelsAdjustment;\n      renderedLinks.push(React.createElement(List, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => scrollToPage(pageName, pixelsAdjustment),\n        $style: {\n          color: 'white'\n        },\n        href: linkRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, pageName.toUpperCase())));\n    }\n\n    return renderedLinks;\n  };\n\n  const formattedHtmlLinks = renderLinks();\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(NavBarScrolling, {\n    links: links,\n    renderLinks: formattedHtmlLinks,\n    scrollToPage: scrollToPage(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Home, {\n    renderLinks: formattedHtmlLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(About, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Product, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }));\n}; // CSS        \n\n\nconst LynetteBrown = '#862e08';\nexport const List = styled('li', {\n  listStyleType: 'none'\n  /* Takes off Bullet Points from List */\n\n});\nexport const Link = styled('a', {\n  textDecoration: 'none',\n\n  /* Takes off Underline in Links */\n  color: LynetteBrown,\n  letterSpacing: '0.1em'\n});\nexport default App;","map":{"version":3,"sources":["/Users/Gray/Desktop/ /lynette-skin-studio-website/src/App.tsx"],"names":["React","Home","Product","About","NavBarScrolling","styled","isMobile","App","links","name","pixelsAdjustment","scrollToPage","id","aboutDiv","document","getElementById","top","getBoundingClientRect","window","pageYOffset","scrollTo","renderLinks","renderedLinks","push","toUpperCase","i","length","pageName","linkRef","color","formattedHtmlLinks","LynetteBrown","List","listStyleType","Link","textDecoration","letterSpacing"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\n\n// Components\nimport Home  from './Home/Home'\nimport Product from './Products/Products'\nimport About from './About/About'\nimport NavBarScrolling from './NavBarScrolling/NavBarScrolling'\n\n// Tools Used\nimport { styled } from 'styletron-react'\nimport { isMobile } from 'react-device-detect'\n\ntype LinkValue = {\n  name: string;\n  pixelsAdjustment: number;\n}\n\nconst App: React.FC = () => {\n  // Links in Nav Bar\n  const links: LinkValue[] = [\n      { name: 'Home', pixelsAdjustment: 0 },\n      { name: 'About', pixelsAdjustment: 140 },\n      { name: 'Services', pixelsAdjustment: 0 },\n      { name: 'Products', pixelsAdjustment: 0 },\n      { name: 'Contact', pixelsAdjustment: 0 }\n  ]\n\n  const scrollToPage = (id: string, pixelsAdjustment: number): void => {\n    const aboutDiv = document.getElementById(id)\n    if (aboutDiv) {\n        var top = aboutDiv.getBoundingClientRect().top + window.pageYOffset\n\n        // When on Mobile, scroll down to have the content just below the \n        // mobile nav. bar\n        if (isMobile)\n          top += pixelsAdjustment\n\n        window.scrollTo({ top })\n    }\n  }\n\n  // Automate Rendering Links\n  const renderLinks = () => {\n      var renderedLinks = []\n\n      renderedLinks.push(\n        <List key={ 0 }>\n            <Link href='#'>{ links[0].name.toUpperCase() }</Link>\n        </List>\n      )\n\n      // On Home Page, show every link except the \"Contact Us\"\n      // because we made a button to handle that link\n      for (let i = 1; i < links.length - 1; i++) {\n        const pageName = links[i].name\n        const linkRef = '#' + pageName\n        const pixelsAdjustment = links[i].pixelsAdjustment\n\n        renderedLinks.push(\n            <List key={ i }>\n                <Link onClick={ () => scrollToPage(pageName, pixelsAdjustment) } \n                      $style={{ color: 'white' }} \n                      href={ linkRef }>\n                  { pageName.toUpperCase() }\n                </Link>\n            </List>\n        )\n      }\n      \n      return renderedLinks\n  }\n\n  const formattedHtmlLinks = renderLinks()\n\n  return (\n    <div className='App'>\n      <NavBarScrolling \n        links={ links } \n        renderLinks={ formattedHtmlLinks }  \n        scrollToPage={ scrollToPage() } />\n      <Home renderLinks={ formattedHtmlLinks } />\n      <About />\n      <Product />\n    </div>\n  )\n}\n\n// CSS        \nconst LynetteBrown = '#862e08'\n\nexport const List = styled('li', {\n  listStyleType: 'none',  /* Takes off Bullet Points from List */\n})\n\nexport const Link = styled('a', {\n  textDecoration: 'none', /* Takes off Underline in Links */\n  color: LynetteBrown,\n  letterSpacing: '0.1em',\n})\n\nexport default App"]},"metadata":{},"sourceType":"module"}