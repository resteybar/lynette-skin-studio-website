{"ast":null,"code":"var _jsxFileName = \"/Users/Gray/Desktop/ /lynette-skin-studio-website/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport Home from './Home/Home';\nimport Product from './Product/Product';\nimport About from './About/About';\nimport NavBarScrolling from './NavBarScrolling/NavBarScrolling';\nimport { styled } from 'styletron-react';\n\nconst App = () => {\n  // Links in Nav Bar\n  const links = [{\n    name: 'Home',\n    path: ''\n  }, {\n    name: 'About',\n    path: 'about-stop'\n  }, {\n    name: 'Services',\n    path: 'Services'\n  }, {\n    name: 'Products',\n    path: 'Product'\n  }, {\n    name: 'Contact',\n    path: 'Contact'\n  }];\n\n  const scrollToAbout = () => {\n    const aboutDiv = document.getElementById('About');\n\n    if (aboutDiv) {\n      const top = aboutDiv.getBoundingClientRect().top + window.pageYOffset + 20;\n      window.scrollTo({\n        top,\n        behavior: 'smooth'\n      });\n    }\n  }; // Automate Rendering Links\n\n\n  const renderLinks = () => {\n    var renderedLinks = [];\n    renderedLinks.push(React.createElement(List, {\n      key: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: '#' + links[0].path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, links[0].name.toUpperCase()))); // On Home Page, show every link except the \"Contact Us\"\n    // because we made a button to handle that link\n\n    for (let i = 1; i < links.length - 1; i++) renderedLinks.push(React.createElement(List, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Link, {\n      onClick: () => scrollToAbout(),\n      $style: {\n        color: 'white'\n      },\n      href: '#' + links[i].path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, links[i].name.toUpperCase())));\n\n    return renderedLinks;\n  };\n\n  const formattedHtmlLinks = renderLinks();\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NavBarScrolling, {\n    links: links,\n    renderLinks: formattedHtmlLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Home, {\n    renderLinks: formattedHtmlLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(About, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Product, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n}; // CSS        \n\n\nconst LynetteBrown = '#862e08';\nexport const List = styled('li', {\n  listStyleType: 'none'\n  /* Takes off Bullet Points from List */\n\n});\nexport const Link = styled('a', {\n  textDecoration: 'none',\n\n  /* Takes off Underline in Links */\n  color: LynetteBrown,\n  letterSpacing: '0.1em'\n});\nexport default App;","map":{"version":3,"sources":["/Users/Gray/Desktop/ /lynette-skin-studio-website/src/App.tsx"],"names":["React","Home","Product","About","NavBarScrolling","styled","App","links","name","path","scrollToAbout","aboutDiv","document","getElementById","top","getBoundingClientRect","window","pageYOffset","scrollTo","behavior","renderLinks","renderedLinks","push","toUpperCase","i","length","color","formattedHtmlLinks","LynetteBrown","List","listStyleType","Link","textDecoration","letterSpacing"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport Home  from './Home/Home'\nimport Product from './Product/Product'\nimport About from './About/About'\nimport NavBarScrolling from './NavBarScrolling/NavBarScrolling'\nimport { styled } from 'styletron-react'\n\ntype LinkValue = {\n  name: string;\n  path: string;\n}\n\nconst App: React.FC = () => {\n  // Links in Nav Bar\n  const links: LinkValue[] = [\n      { name: 'Home', path: '' },\n      { name: 'About', path: 'about-stop' },\n      { name: 'Services', path: 'Services' },\n      { name: 'Products', path: 'Product' },\n      { name: 'Contact', path: 'Contact' }\n  ]\n\n  const scrollToAbout = (): void => {\n    const aboutDiv = document.getElementById('About')\n    if (aboutDiv) {\n        const top = aboutDiv.getBoundingClientRect().top + window.pageYOffset + 20\n        window.scrollTo({\n            top,\n            behavior: 'smooth'\n        })\n    }\n  }\n\n  // Automate Rendering Links\n  const renderLinks = () => {\n      var renderedLinks = []\n\n      renderedLinks.push(\n        <List key={ 0 }>\n            <Link href={ '#' + links[0].path }>{ links[0].name.toUpperCase() }</Link>\n        </List>\n      )\n\n      // On Home Page, show every link except the \"Contact Us\"\n      // because we made a button to handle that link\n      for (let i = 1; i < links.length - 1; i++)\n          renderedLinks.push(\n              <List key={ i }>\n                  <Link onClick={ () => scrollToAbout() } $style={{ color: 'white' }} href={ '#' + links[i].path }>{ links[i].name.toUpperCase() }</Link>\n                  {/* <Link href={ '#' + links[i].path }>{ links[i].name.toUpperCase() }</Link> */}\n              </List>\n          )\n      \n      return renderedLinks\n  }\n\n  const formattedHtmlLinks = renderLinks()\n\n  return (\n    <div className='App'>\n      <NavBarScrolling links={ links } renderLinks={ formattedHtmlLinks } />\n      <Home renderLinks={ formattedHtmlLinks } />\n      <About />\n      <Product />\n    </div>\n  )\n}\n\n// CSS        \nconst LynetteBrown = '#862e08'\n\nexport const List = styled('li', {\n  listStyleType: 'none',  /* Takes off Bullet Points from List */\n})\n\nexport const Link = styled('a', {\n  textDecoration: 'none', /* Takes off Underline in Links */\n  color: LynetteBrown,\n  letterSpacing: '0.1em',\n})\n\nexport default App"]},"metadata":{},"sourceType":"module"}