{"ast":null,"code":"var _jsxFileName = \"/Users/Gray/Desktop/ /lynette-skin-studio-website/src/TestNavBar/TestNavBar.tsx\";\nimport React from 'react';\nimport { styled, withStyle } from 'styletron-react';\n\n// Tutorial: https://itnext.io/how-to-build-a-responsive-navbar-using-flexbox-and-javascript-eb0af24f19bf\nconst TestNavBar = () => {\n  const links = ['Home', 'Product', 'About Us', 'Contact Us', 'Blog']; // Automate Rendering Links\n\n  const renderLinks = () => {\n    var renderedLinks = [];\n\n    for (let i = 0; i < links.length; i++) renderedLinks.push(React.createElement(List, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, links[i])));\n\n    return renderedLinks;\n  };\n\n  const size = '21';\n  var isMenuDisplayed = false;\n\n  const displayLinks = () => {\n    const mainNav = document.getElementById('menu');\n    if (isMenuDisplayed) mainNav === null || mainNav === void 0 ? void 0 : mainNav.setAttribute('style', 'display: none;');else mainNav === null || mainNav === void 0 ? void 0 : mainNav.setAttribute('style', 'display: block;');\n    isMenuDisplayed = !isMenuDisplayed;\n  };\n\n  return React.createElement(\"div\", {\n    id: \"TestNavBar\",\n    className: \"debug-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}; // CSS\n\n\nconst NavBar = styled('nav', {\n  fontSize: '18px',\n  border: '1px solid rgba(0, 0, 0, 0.2)',\n  backgroundImage: 'linear-gradient(260deg, #2376ae 0%, #c16ecf 100%)',\n  fontFamily: '\"Josefin Sans\", sans-serif'\n});\nconst LinksList = styled('ul', {\n  listStyleType: 'none',\n  margin: '15px auto',\n  textAlign: 'center',\n  display: 'none'\n});\nconst Link = styled('a', {\n  textDecoration: 'none',\n  color: 'rgba(255, 255, 255, 0.7)'\n});\nconst Logo = withStyle(Link, {\n  display: 'inline-block',\n  fontSize: '22px',\n  marginTop: '10px',\n  marginLeft: '20px'\n});\nconst List = styled('li', {\n  textAlign: 'center',\n  margin: '15px auto'\n});\nconst MenuIcon = styled('span', {\n  position: 'absolute',\n  top: '10px',\n  right: '20px',\n  cursor: 'pointer',\n  color: 'rgba(255,255,255,0.8)',\n  fontSize: '24px'\n}); // EXPORT\n\nexport default TestNavBar;","map":{"version":3,"sources":["/Users/Gray/Desktop/ /lynette-skin-studio-website/src/TestNavBar/TestNavBar.tsx"],"names":["React","styled","withStyle","TestNavBar","links","renderLinks","renderedLinks","i","length","push","size","isMenuDisplayed","displayLinks","mainNav","document","getElementById","setAttribute","NavBar","fontSize","border","backgroundImage","fontFamily","LinksList","listStyleType","margin","textAlign","display","Link","textDecoration","color","Logo","marginTop","marginLeft","List","MenuIcon","position","top","right","cursor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { styled, withStyle } from 'styletron-react'\nimport menuIcon from '../images/menu.png'\n\n// Tutorial: https://itnext.io/how-to-build-a-responsive-navbar-using-flexbox-and-javascript-eb0af24f19bf\nconst TestNavBar: React.FC = () => {\n    const links: string[] = [\n        'Home',\n        'Product',\n        'About Us',\n        'Contact Us',\n        'Blog'\n    ]\n\n    // Automate Rendering Links\n    const renderLinks = () => {\n        var renderedLinks = []\n\n        for (let i = 0; i < links.length; i++)\n            renderedLinks.push(\n                <List key={ i }>\n                    <Link href='#'>{ links[i] }</Link>\n                </List>\n            )\n        \n        return renderedLinks\n    }\n    \n    const size: string = '21'\n    var isMenuDisplayed: boolean = false\n\n    const displayLinks = () => {\n        const mainNav = document.getElementById('menu')\n\n        if (isMenuDisplayed)\n            mainNav?.setAttribute('style', 'display: none;')\n        else \n            mainNav?.setAttribute('style', 'display: block;')\n\n        isMenuDisplayed = !isMenuDisplayed\n    }\n\n    return (\n        <div id='TestNavBar' className='debug-border'>\n            <NavBar>\n                \n            </NavBar>\n        </div>\n    )\n}\n\n// CSS\nconst NavBar = styled('nav', {\n    fontSize: '18px',\n    border: '1px solid rgba(0, 0, 0, 0.2)',\n    backgroundImage: 'linear-gradient(260deg, #2376ae 0%, #c16ecf 100%)',\n    fontFamily: '\"Josefin Sans\", sans-serif'\n})\n\nconst LinksList = styled('ul', {\n    listStyleType: 'none',\n    margin: '15px auto',\n    textAlign: 'center',\n    display: 'none'\n})\n\nconst Link = styled('a', {\n    textDecoration: 'none',\n    color: 'rgba(255, 255, 255, 0.7)'\n})\n\nconst Logo = withStyle(Link, {\n    display: 'inline-block',\n    fontSize: '22px',\n    marginTop: '10px',\n    marginLeft: '20px'\n})\n\nconst List = styled('li', {\n    textAlign: 'center',\n    margin: '15px auto'\n})\n\nconst MenuIcon = styled('span', {\n    position: 'absolute',\n    top: '10px',\n    right: '20px',\n    cursor: 'pointer',\n    color: 'rgba(255,255,255,0.8)',\n    fontSize: '24px'\n})\n\n// EXPORT\nexport default TestNavBar"]},"metadata":{},"sourceType":"module"}